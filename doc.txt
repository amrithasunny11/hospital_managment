# Hospital and Clinician Group Management API

## Overview

This project is a RESTful API built with Laravel to manage the data for a tree structure representing different hospitals and groups of clinicians within those hospitals. The API supports CRUD operations for these groups and ensures data integrity.

## Requirements

- PHP 8.0+
- Composer
- MySQL
- Laravel 8.x

## Setup Instructions

### 1. Clone the Repository

```sh
git clone https://github.com/your-username/hospital-management-api.git
cd hospital-management-api

2. Install Dependencies
composer install

3. Configure Environment Variables
Copy the .env.example file to .env and update the necessary environment variables, especially the database configuration.

cp .env.example .env

Update the .env file with your database credentials:

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=your_database_name
DB_USERNAME=your_database_user
DB_PASSWORD=your_database_password

5. Run Migrations

php artisan migrate

6. Seed the Database (Optional)
If you have seeders, you can seed the database:

php artisan db:seed

Run the Development Server

php artisan serve

The API will be available at http://localhost:8000.

API Endpoints
Authentication
Register: POST /api/register
Login: POST /api/login

Groups
Create Group: POST /api/groups
List Groups: GET /api/groups
View Group: GET /api/groups/{id}
Update Group: PUT /api/groups/{id}
Delete Group: DELETE /api/groups/{id}
Request and Response Formats

Request and Response Formats
Create Group
Request:

{
    "name": "New Group",
    "parent_id": null,
    "description": "Group description"
}

Response:

{
    "message": "Group created successfully",
    "group": {
        "id": 1,
        "name": "New Group",
        "parent_id": null,
        "description": "Group description",
        "created_at": "2023-01-01T00:00:00.000000Z",
        "updated_at": "2023-01-01T00:00:00.000000Z"
    }
}

List Groups

Response:


{
    "groups": [
        {
            "id": 1,
            "name": "Group 1",
            "parent_id": null,
            "description": "Description 1",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z",
            "children": []
        },
        {
            "id": 2,
            "name": "Group 2",
            "parent_id": 1,
            "description": "Description 2",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z",
            "children": []
        }
    ]
}

Running Tests

Unit Tests
php artisan test --testsuite=Unit

Feature Tests
php artisan test --testsuite=Feature